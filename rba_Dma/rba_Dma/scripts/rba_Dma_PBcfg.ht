/*<BASDKey>
**********************************************************************************************************************
*
* COPYRIGHT RESERVED, 2010 Robert Bosch GmbH. All rights reserved.
* The reproduction, distribution and utilization of this document as well as the communication of its contents to
* others without explicit authorization is prohibited. Offenders will be held liable for the payment of damages.
* All rights reserved in the event of the grant of a patent, utility model or design.
*
**********************************************************************************************************************
* Administrative Information (automatically filled in)
* $Domain____:$
* $Namespace_:$
* $Class_____:$
* $Name______:$
* $Variant___:$
* $Revision__:$
**********************************************************************************************************************
</BASDKey>*/

#ifndef RBA_DMA_PBCFG_H
#define RBA_DMA_PBCFG_H

/*
 ***************************************************************************************************
 * Includes
 ***************************************************************************************************
 */

// global DMA macros
#define RBA_DMA_ERROR_ACTION_NONE  1
#define RBA_DMA_ERROR_ACTION_DET   2
#define RBA_DMA_ERROR_ACTION_RESET 3
</RBA_DMA_MACROS/>

// typedefs
// JDP trigger multiplexer type
</RBA_DMA_DMAMUX_TYPE/>

//#if ( MCU_RB_MACHINE_FAM == MCU_RB_JDP_UC1 )
//typedef struct
//{
//    uint8 CHCONFIG0[RBA_DMA_MUX0_SIZE];
//    uint8 CHCONFIG1[RBA_DMA_MUX1_SIZE];
//    uint8 CHCONFIG2[RBA_DMA_MUX2_SIZE];
//    uint8 CHCONFIG3[RBA_DMA_MUX3_SIZE];
//    uint8 CHCONFIG4[RBA_DMA_MUX4_SIZE];
//    uint8 CHCONFIG5[RBA_DMA_MUX5_SIZE];
//} rba_Dma_Mux_t;
//#endif

/* macros for CMU register initialisation */

</RBA_DMA_PB_DMA_ENUMS/>

</RBA_DMA_PB_PBENUMS/>

</RBA_DMA_PB_REDEFS/>

// DMA Resolver structure
struct DmaRslvr_st
{
    uint8          idxUnit_u8;
    uint8          idxChan_u8;
    rba_Dma_Id_ten idLinkCh_en;
};

// variable/constant external declarations

#define RBA_DMA_START_SEC_CONST_ENUM
#include "rba_Dma_MemMap.h"
</RBA_DMA_PB_EXTERNALS/>
#define RBA_DMA_STOP_SEC_CONST_ENUM
#include "rba_Dma_MemMap.h"

/* DMA register access interfaces */

#define RBA_DMA_START_SEC_CONST_32
#include "rba_Dma_MemMap.h"
extern struct DmaRslvr_st const rba_Dma_Cfg_Rslvr_acst[RBA_DMA_NUM_IDS_E][RBA_DMA_NUM_PB_VRNT_E];
#define RBA_DMA_STOP_SEC_CONST_32
#include "rba_Dma_MemMap.h"

#if ( MCU_RB_MACHINE_FAM == MCU_RB_JDP_UC1 )

#define RBA_DMA_START_SEC_CONST_8
#include "rba_Dma_MemMap.h"
extern const uint8 rba_Dma_MuxSize_acu8[RBA_DMA_NUM_MUX];
extern const uint8 rba_Dma_Mux_acu8[RBA_DMA_NUM_PB_VRNT_E][RBA_DMA_NUM_MUX][16];
#define RBA_DMA_STOP_SEC_CONST_8
#include "rba_Dma_MemMap.h"

#endif

/* RBA_DMA_PBCFG_H */
#endif
